<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hedgehog.client.orderDetails.model.dao.OrderDetailsMapper">
<select id="selectTotalCountOrderInfo">
    /*tbl_order 에서 데이터를 가져온다.
    이때 orderDeliveryInfo인 경우와
    exchangePaybackInfo인 경우. 두가지를 생각해야 한다.*/
    /*int userCode, OrderDTO order, String info*/
    SELECT COUNT(*)
    FROM tbl_order A
    <where>
        <if test="order.state == 0 and info == 'exchangePaybackInfo'">
            A.state IN('환불중','환불완료','교환중','교환완료')
        </if>
        <if test="order.state == 1">
            A.state = '환불중'
        </if>
        <if test="order.state == 2">
            A.state = '환불완료'
        </if>
        <if test="order.state == 3">
            A.state = '교환중'
        </if>
        <if test="order.state == 4">
            A.state = '교환완료'
        </if>
        <if test="order.state == 5 and info == 'orderDeliveryInfo'">
            A.state = '배송대기'
        </if>
        <if test="order.state == 6 and info == 'orderDeliveryInfo'">
            A.state = '배송중'
        </if>
        <if test="order.state == 7 and info == 'orderDeliveryInfo'">
            A.state = '배송완료'
        </if>
        AND A.customer_code = #{userCode}
        AND A.creation_date BETWEEN #{order.dateStart} AND #{order.dateEnd}
    </where>
</select>
    <resultMap id="orderListDTOResultMap" type="com.hedgehog.client.orderDetails.model.dto.OrderListDTO">
        <id property="orderCode" column="order_code"/>
        <result property="creationDate" column="creation_date"/>
        <result property="convertPath" column="convert_path"/>
        <result property="productCode" column="product_code"/>
        <result property="productName" column="product_name"/>
        <result property="productCount" column="product_count"/>
        <result property="costPrice" column="cost_price"/>
        <result property="deliveryCharge" column="delivery_charge"/>
        <result property="reducedPrice" column="reduced_price"/>
        <result property="pointUsage" column="point_usage"/>
        <result property="pointCharge" column="point_charge"/>
        <result property="state" column="state"/>
    </resultMap>
    <select id="selectOrderInfoList" resultMap="orderListDTOResultMap">
        SELECT A.order_code,
        A.creation_date,
        B.convert_path,
        A.product_code,
        D.product_name,
        SUM(C.count) product_count,
        SUM(C.cost_price) cost_price,
        SUM(C.delivery_charge) delivery_charge,
        SUM(C.reduced_price) reduced_price,
        A.point_usage,
        SUM(C.point_charge) point_charge,
        A.state
        FROM tbl_order A
        JOIN tbl_product_img B ON A.product_code = B.product_code
        JOIN tbl_order_details C ON A.order_code = C.order_code
        JOIN tbl_product D ON A.product_code = D.product_code
        <where>
            <if test="orderDetailsSelectCriteria.order.state == 0 and info == 'exchangePaybackInfo'">
                A.state IN('환불중','환불완료','교환중','교환완료')
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 1">
                A.state = '환불중'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 2">
                A.state = '환불완료'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 3">
                A.state = '교환중'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 4">
                A.state = '교환완료'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 5 and info == 'orderDeliveryInfo'">
                A.state = '배송대기'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 6 and info == 'orderDeliveryInfo'">
                A.state = '배송중'
            </if>
            <if test="orderDetailsSelectCriteria.order.state == 7 and info == 'orderDeliveryInfo'">
                A.state = '배송완료'
            </if>
            AND A.customer_code = #{userCode}
            AND A.creation_date BETWEEN #{orderDetailsSelectCriteria.order.dateStart} AND
            #{orderDetailsSelectCriteria.order.dateEnd}
            AND B.image_classification = 'Thumbnails'
        </where>
        GROUP BY A.order_code
        LIMIT #{orderDetailsSelectCriteria.startRow}, #{orderDetailsSelectCriteria.limit}
    </select>
</mapper>